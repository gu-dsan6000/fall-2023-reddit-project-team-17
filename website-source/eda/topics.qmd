# Topics

The questions we will address in this work are:

**Idea 1**

* `Business goal`: Given a textual post, classify the subreddit to which it belongs.
* `Technical approach`: Use NLP techniques to construct a feature set from the textual components of a post. These features may be word “dummy variables” (the existence or non-existence of a word), word counts, n-grams (sequences of `n` words), or other types of features. Use the newly created features to build a multi-class classification model capable of classifying the subreddit to which a post belongs.

**Idea 2**

* `Business goal`: Given a textual post, predict the age and gender of the author of the post.
* `Technical approach`: Use NLP techniques to extract the age and gender of the author of a post, if available (as an example: “My brother (24M) and I (23M) went to the store…”). Use NLP techniques to construct a feature set from the textual components of a post. Again, these features may be word “dummy variables” (the existence or non-existence of a word), word counts, n-grams (sequences of `n` words), or other types of features. Use the newly created features to build two models: a regression model for predicting the age of the author of the post, and a classification model for classifying the gender of the author of the post.

**Idea 3**

* `Business goal`: Use a pre-trained model to build features surrounding NLP for our ML tasks.
* `Technical approach`: Identify available pre-trained models in the realm of NLP and what they are trained to extract from textual data. Use a pre-trained model, or models, to perform NLP tasks for downstream tasks. For instance, use a pre-trained model to obtain word embeddings (vector representations of words) that can be used as features in a subsequent ML model.

**Idea 4**

* `Business goal`: Predict the popularity of text-based submissions based on their text content.
* `Technical approach`: Using NLP techniques on the text posts of various similarly sized subreddits (by number of subscribers) that typically contain posts with moderate to high word counts, extract the most pertinent features. Apply supervised machine learning models (e.g., regression) to predict the number of upvotes and/or comments a given text post will receive. Identify the most influential/important words and phrases that predict a post’s popularity and calculate accuracy metrics based on actual post popularity.

**Idea 5**

* `Business goal`: Determine/predict “flairs” of Reddit posts in r/AITA based on their text content.
* `Technical approach`: Focusing primarily on the subreddit r/AITA and its flairs (Asshole, Not the A-hole, Everyone Sucks, No A-holes here), apply NLP techniques such as tokenization on text-based submissions to extract the important contents of each post. Apply a multi-class classification model trained on labelled r/AITA posts (i.e., text posts with a flair) to predict which flair a given post will receive based on its text content. Present confusion matrices on testing dataset and identify the words/phrases most commonly associated with each flair type.

**Idea 6**

* `Business goal`: Determine which subreddit posts belong to based on their sentiment.
* `Technical approach`: Use NLP techniques to clean content of various text based subreddits. Apply sentiment modeling to these posts. Train a classification model on these posts. Assess accuracy of the model using unlabelled posts (i.e., posts where the subreddit is not identified). Present findings in confusion matrices and calculate various accuracy metrics.

**Idea 7**

* `Business goal`: 
* `Technical approach`: 

**Idea 8**

* `Business goal`: 
* `Technical approach`: 

**Idea 9**

* `Business goal`: 
* `Technical approach`: 

**Idea 10**

* `Business goal`: 
* `Technical approach`: 

**Idea 11**

* `Business goal`: 
* `Technical approach`: 

**Idea 12**

* `Business goal`: 
* `Technical approach`: 




